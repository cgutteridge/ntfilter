#!/usr/bin/perl

use Getopt::Long;
use strict;
use warnings;

my $help;

srand();

GetOptions (
            "help"  => \$help,   # flag
) or help(1);
help(0) if( $help );

sub help
{
	my( $exitcode ) = @_;

	print STDERR <<END;
$0 <filename1> <filename2> ...

Concatenates ntriple files but sets a new prefix on bnodes in each file so 
they don't clash giving false links.

END

	exit $exitcode;
}

if( @ARGV == 0 )
{
	error( "Did not specify any filenames." );
}


my @prefixes = ("A".."Z", "a".."z" );

# mode is the number of characters to use in the prefix
my $mode = 1;
if( @ARGV > @prefixes ) { $mode = 2; }

my $fh;
my $count = 0;
foreach my $file ( @ARGV )
{
	my $prefix;
	if( $mode == 1 )
	{
		$prefix = $prefixes[$count];
	}
	else
	{
		$prefix = $prefixes[int( $count/(scalar @prefixes ))].$prefixes[ $count % (scalar @prefixes)];
	}
	
	# really ntriples files should be ascii, but if not 
	# lets treat them as utf8. Linked-data people like utf8.
	open( $fh, "<:utf8", $file ) || failMessage( 2, "Failed to read $file: $!" );
	while( my $line = readline( $fh ) )
	{
		my $t = ntparse($line);

		if( $t->{s_bnode} )
		{
			$t->{s} =~ s/^_:/_:$prefix/;
		}
			
		if( $t->{o_bnode} )
		{
			$t->{o} =~ s/^_:/_:$prefix/;
		}
			
		ntprint($t);
	}
	$count ++;
}
exit 0;



sub error 
{
	my( $error ) = @_;

	print STDERR "$error\n";

	exit 1;
}

############################################################
# NTriples Line parser
# Repeated in every script so they are stand alone but if there's
# a bug it needs to be fixed in all the scripts
# does not currently unescape literals 
############################################################
sub ntparse
{
	my( $line ) = @_;
	chomp $line;
	
	if( $line =~ m/^\s*#(.*)/ ) { return { t=>"comment", "comment"=>$1 }; }
	if( $line =~ m/^\s*$/ ) { return { t=>"blank" }; }

	my $ok = $line =~ m/^(\<([^>]*)\>|(_:[^\s]*))\s+\<([^>]*)\>\s+(\<([^>]*)\>|(_:[^\s]*)|"([^"]*)"(\^\^\<([^>]*)\>|\@([^\s]+))?)\s*\.\s*$/;
	if( !$ok ) { return { t=>"error" }; }
	my $t={};
	$t->{t} = "triple";
	$t->{s} = $2||$3;
	$t->{p} = $4;
	$t->{o} = $6||$7||$8;
	$t->{islit} = defined $8;
	$t->{ot} = $10;
	$t->{ol} = $11;
	$t->{s_bnode} = defined $3;
	$t->{o_bnode} = defined $7;
	# does not currently unescape literals 

	return $t;
}
############################################################
# NTriples Line printer
# Repeated in every script so they are stand alone but if there's
# a bug it needs to be fixed in all the scripts
############################################################
sub ntprint
{
	my( $t ) = @_;

	return if( $t->{t} eq "error" );
	if( $t->{t} eq "blank" )
	{
		print "\n";
		return;
	}
	if( $t->{t} eq "comment" )
	{
		print "#".$t->{comment}."\n";
		return;
	}

	if( $t->{s_bnode} )
	{
		print $t->{s};
	}
	else
	{
		print "<".$t->{s}.">";
	}
	print " <".$t->{p}."> ";
	if( $t->{o_bnode} )
	{
		print $t->{o};
	}
	elsif( !$t->{islit} )
	{
		print "<".$t->{o}.">";
	}
	else
	{
		print "\"".$t->{o}."\"";
		if( $t->{ot} )
		{
			print "^^<".$t->{ot}.">";
		}
		elsif( $t->{ol} )
		{
			print "\@".$t->{ol};
		}
	}
	print " .\n";
}
