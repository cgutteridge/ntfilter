#!/usr/bin/perl

use Getopt::Long;
use strict;
use warnings;

my $predicate;
my $subject;
my $object;
my $otype;
my $olang;
my $onlyliterals;
my $noliterals;
my $help;

GetOptions (
            "predicate=s"   => \$predicate,      # string
            "subject=s"   => \$subject,      # string
            "object=s"   => \$object,      # string
            "otype=s"   => \$otype,      # string
            "olang=s"   => \$olang,      # string
            "only-literals"  => \$onlyliterals,   # flag
            "no-literals"  => \$noliterals,   # flag
            "help"  => \$help,   # flag
) or help(1);
help(0) if( $help );

sub help
{
	my( $exitcode ) = @_;

	print STDERR <<END;
$0 <options> [<filename>]

Filters a stream of NTriples to remove unwanted ones. Does not understand bnodes yet.

--predicate <text> : predicate must containt this text
--subject <text>   : subject must containt this text
--object <text>    : object must containt this text
--otype <text>     : object type must containt this text
--only-literals    : Only output triples where the object is a literal
--no-literals      : Only output triples where the object is not a literal

END
	exit $exitcode;
}

if( $onlyliterals && $noliterals ) {
	error( "Can't set --only-literals and --no-literals -- you'd have nothing left!" );
}

@ARGV = ( "-" ) if( @ARGV == 0 ); #default to stdin
if( @ARGV != 1 )
{	
	error( "Did not specify a filename." );
}
my $filename = $ARGV[0];
my $fh;
if( $filename eq "-" )
{
	$fh = *STDIN;
}
else
{
	open( $fh, "<:utf8", $filename ) || error( "Could not read $filename: $!" );
}
while( my $line = readline( $fh ) )
{
	############################################################
	# NTriples Line parser
	# Repeated in every script so they are stand alone but if there's
	# a bug it needs to be fixed in all the scripts
	############################################################
	chomp $line;
	$line =~ m/^(\<([^>]*)\>|(_:[^ ]*)) \<([^>]*)\> (\<([^>]*)\>|(_:[^ ]*)|"([^"]*)"(\^\^\<([^>]*)\>|\@([^ ]+))?) \.$/;
	my $s = $2||$3;
	my $p = $4;
	my $o = $6||$7||$8;
	my $islit = defined $8;
	my $ot = $10;
	my $ol = $11;
	############################################################

	next if( $onlyliterals && !$islit );
	next if( $noliterals && $islit );

	next if( defined $subject && index($s,$subject)==-1 );
	
	next if( defined $predicate && index($p,$predicate)==-1 );

	next if( defined $object && index($o,$object)==-1 );

	next if( defined $otype && (!defined $ot || index($ot,$otype)==-1 ));

	next if( defined $olang && (!defined $ol || index($ol,$olang)==-1 ));

	print $line."\n";
}
exit;









sub error 
{
	my( $error ) = @_;

	print STDERR "$error\n";

	exit 1;
}


